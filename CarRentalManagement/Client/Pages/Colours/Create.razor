@page  "/Colours/create/"
@inject HttpClient _client
@inject NavigationManager _navManager
<h3 class="card-title">Create New Colours</h3>
<hr />
<br />

<EditForm Model="@Colour" OnValidSubmit="CreateColour">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Name: </label>
        <div>
            <InputText @bind-Value="Colour.Name" class="form-control" />
            <ValidationMessage For="@(() => Colour.Name)" />
        </div>
    </div>
    <button type="submit" class="btn btn-success btn-block">
        Create Colour
    </button>
</EditForm>

@code {
    Colour Colour = new Colour();

    private IList<Make> Makes;
    private IList<Model> Models;
    private IList<Colour> Colours;

    protected async override Task OnInitializedAsync()
    {
        Makes = await _client.GetFromJsonAsync<List<Make>>($"{Endpoints.MakesEndpoint}");
        Models = await _client.GetFromJsonAsync<List<Model>>($"{Endpoints.ModelsEndpoint}");
        Colours = await _client.GetFromJsonAsync<List<Colour>>($"{Endpoints.ColoursEndpoint}");
    }
    private async Task CreateColour()
    {
        await _client.PostAsJsonAsync(Endpoints.ColoursEndpoint, Colour);
        _navManager.NavigateTo("/Colours/");
    }
}
